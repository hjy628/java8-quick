/**
 * Created by hjy on 18-1-9.
 */
package com.hjy.java8quick.chap3;



        /**
         *  1.使用lambda表达式的主要原因是，将代码的执行延迟到一个合适的时间点
         *  2.当执行一个lambda表达式时，请确认提供了所有必需的数据作为输入
         *  3.如果可以，请选择已有的函数式接口
         *  4.编写返回一个函数式接口实例的方法通常很有用
         *  5.当你使用转换时，请考虑如何能组合他们
         *  6.要延迟组合转换，你需要保留一个所有未执行的转换列表，并在最后应用他们
         *  7.如果你需要多次应用一个lambda表达式，最好将工作分成多个子任务，以便可以并发执行
         *  8.请考虑如何处理lambda表达式中抛出异常的情况
         *  9.当使用泛型函数式接口时，请使用?Super通配符作为参数类型，使用?Entend通配符作为返回类型
         *  当使用可以被函数转换的泛型类型时，请考虑使用map和flatMap
         *
         *
         */